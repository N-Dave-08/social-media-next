name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, master]
  pull_request:
    branches: [main, master]

env:
  NODE_ENV: test
  NEXTAUTH_SECRET: test-secret-key-for-ci-cd-pipeline
  JWT_SECRET: test-jwt-secret-key-for-ci-cd-pipeline

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma client
      run: npx prisma generate
    
    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
    
    - name: Run linting
      run: npm run lint
    
    - name: Build application
      run: npm run build
    
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma client
      run: npx prisma generate
    
    - name: Build Docker image
      run: docker build -t social-media-app .
    
    - name: Test Docker image
      run: docker run --rm social-media-app npm test
    
    - name: Verify Docker image runs
      run: |
        docker run --rm -d --name test-app -p 3001:3000 social-media-app
        sleep 10
        curl -f http://localhost:3001/api/test || exit 1
        docker stop test-app
        docker rm test-app